@model FinalProject.Models.Customer

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    label {
        float: left;
        font-size: 16px;
    }

    .form-group {
        margin: 20px;
        height: 20px;
    }

    input {
        float: right;
        box-sizing: border-box;
    }

    select {
        float: right;
        width: 177px;
    }
</style>
<hr />
<h1>Đăng ký thông tin khách hàng</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="text-align: center; width: 350px; height: 400px; margin: 0 525px; padding-top: 20px;">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NameCus, "Họ tên", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameCus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameCus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneCus, "Số điện thoại", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneCus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneCus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailCus, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailCus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailCus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressDelivery, "Địa chỉ giao hàng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressDelivery, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressDelivery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "Tên đăng nhập", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, "Mật khẩu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, "Xác nhận mật khẩu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                @if (!string.IsNullOrEmpty(ViewBag.ErrorInfo))
                {
                    <span style="color: red; font-style: italic; float: right;">@ViewBag.ErrorInfo</span>
                }
            </div>
        </div>

        <div class="form-group" style="padding: 0 115px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Đăng ký" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở về Giỏ hàng", "ShowCart", "ShoppingCart")
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.min.css">
@if (TempData["IsRegistered"] != null && (bool)TempData["IsRegistered"])
{
    <script>
        // Hàm hiển thị thông báo đăng ký thành công bằng SweetAlert2
        function showSuccessAlert() {
            Swal.fire({
                icon: 'success',
                title: 'Đăng ký thành công!',
                text: 'Bạn đã đăng ký tài khoản thành công.',
                confirmButtonText: 'OK',
                confirmButtonColor: '#3085d6',
            });
        }

        // Gọi hàm hiển thị thông báo khi trang đã load xong
        window.onload = function () {
            showSuccessAlert();
        }
    </script>
}